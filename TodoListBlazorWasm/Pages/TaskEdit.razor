@page "/taskEdit/{TaskId}"
@using TodoList.Models;
@using TodoList.Models.Enums;
@using TodoListBlazorWasm.Services;
@using TodoListBlazorWasm.Components;
@inject ITaskApiClient TaskApiClient;
@inject NavigationManager NavigationManager;
@inject IToastService toastService

@if(Task == null)
{
    <LoadingIndicator></LoadingIndicator>
}
else
{
    <h3>Task Edit: @Task.Name</h3>

    <EditForm Model="Task" OnValidSubmit="SubmitTask">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label for="Name">Name</label>
            <InputText class="form-control" @bind-Value="Task.Name"></InputText>
            <ValidationMessage For="()=>Task.Name"></ValidationMessage>
            <small id="nameHelp" class="form-text text-muted">Please enter task title here.</small>
        </div>

        <div class="form-group">
            <label for="Priority">Priority</label>
            <InputSelect class="form-control" @bind-Value="Task.Priority">
                <option>Select a priority</option>
                @foreach (string item in Enum.GetNames(typeof(Priority)))
                {
                    <option value="@item">@item</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>Task.Priority"></ValidationMessage>
            <small id="priorityHelp" class="form-text text-muted">Please choose a priority.</small>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
}

@code {
    [Parameter]
    public string TaskId { get; set; }

    private TaskUpdateRequest Task;

    protected async override Task OnInitializedAsync()
    {
        var taskDto = await TaskApiClient.GetTaskDetail(TaskId);
        Task = new TaskUpdateRequest();
        Task.Name = taskDto.Name;
        Task.Priority = taskDto.Priority;
    }

    private async Task SubmitTask(EditContext context)
    {
        var result = await TaskApiClient.UpdateTask(Guid.Parse(TaskId), Task);
        if (result)
        {
            toastService.ShowSuccess($"{Task.Name} has been updated successfully.");
            NavigationManager.NavigateTo("TaskList");
        }
        else
        {
            toastService.ShowError("An error occured in progress. Please contact to administrator.");
        }
    }
}
